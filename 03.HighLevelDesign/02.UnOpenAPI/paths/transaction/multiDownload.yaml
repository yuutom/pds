post:
  operationId: multiDownload
  security:
    - AccessToken: []
  tags:
    - transaction
  summary: 個人情報一括DL
  parameters:
    - name: accessToken
      in: header
      description: アクセストークン
      required: true
      schema:
        $ref: '#/components/schemas/accessToken'
    - name: timeStamp
      in: header
      description: | 
        タイムスタンプ<br>
        形式は「yyyy/MM/dd hh:mm:ss.iii」とする
      required: true
      schema:
        $ref: '#/components/schemas/timeStamp'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/TfUserRequest'
    required: true
  description: |
    # 概要
    検索条件に一致する個人情報をバイナリデータ含めて一括ダウンロードする。<br>
    ダウンロードしたデータはWebBureauTransferで、画面に入力したアドレスに送信する。
    ## 検索条件に関する注意事項
    tidリストの要素数が０の場合、検索条件に指定された条件でDBを検索してデータを取得する。<br>
    tidリストの要素数が１以上の場合、検索条件を無視して、tidリストに指定されたトランザクションIDでDBを検索してデータを取得する。<br>
    検索機能の仕様は「個人情報検索API」の仕様に準ずる。

  responses:
    '200':
      description: 正常終了レスポンス
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TfUserResponse'
    '400':
      description: |
        Bad Request: エラーコード一覧
        |エラーコード|エラー名|メッセージ|置換対象|内容|
        |------------|----------|----|----|----|
        |010001|パラメータ構造不正|パラメータの構造が不正です。||パラメータ(JSON)の構造が破綻している場合のエラーです。
        |010002|PDSユーザIDチェック不正|PDSユーザIDが不正です。||以下に該当する場合のエラーです。<br>・リクエストヘッダに指定されたPDSユーザIDが不正<br>・リクエストヘッダにPDSユーザIDが指定されていない
        |010004|アクセストークンチェック不正|アクセストークンが不正です。||以下に該当する場合のエラーです。<br>・リクエストヘッダに指定されたアクセストークンが不正(アクセストークンの有効期限が切れている場合も不正なアクセストークンとみなされます。)<br>・リクエストヘッダにアクセストークンが指定されていない
        |020001|必須チェック不正|{0}を入力してください。|{0}: 項目名|必須パラメータが指定されていなかった場合のエラーです。|        
        |020002|最大桁数チェック不正|{0}が許容桁数({1}桁)を超過しています。|{0}: 項目名<br>{1}: 最大桁数|APIが規定する最大入力桁数を超過する桁数での指定があった場合のエラーです。
        |020003|フォーマットチェック不正|{0}の形式が正しくありません。|{0}: 項目名|APIが規定するデータフォーマットと相違があった場合のエラーです。|
        |020007|タイムスタンプチェック不正|タイムスタンプが不正です。||以下に該当する場合のエラーです。<br>・リクエストヘッダに指定されたタイムスタンプが不正<br>・リクエストヘッダにタイムスタンプが指定されていない
        |020014|桁数不一致|{0}が既定の桁数（{1}桁）と不一致です。|{0}: 項目名<br>{1}: 値|パラメータが既定の桁数と不一致の場合のエラーです。
        |020016|最小桁数チェック不正|{0}の許容桁数({1}桁)が不足しています。|{0}: 項目名<br>{1}: 値|APIが規定する最小入力桁数を不足する桁数での設定があった場合のエラーです。
        |020019|型チェック不正|{0}は{1}型ではありません。|{0}: 項目名<br>{1}: 値|指定の型以外の型が設定されている場合のエラーです。
        |020020|入力可能文字不正|{0}に入力不可の文字が含まれています。|{0}: 項目名|入力不可の文字が含まれている場合のエラーです。
        |030006|期間指定不正|期限指定の範囲が不正です。||期間指定が不正な場合のエラーです。
        |030016|TFオペレータIDと承認TFオペレータIDが同じ|TFオペレータIDと承認TFオペレータIDの設定された値が同じです。||TFオペレータIDと承認TFオペレータIDの設定された値が同じ場合のエラーです。
        |990003|復号エラー|復号処理に失敗しました。||復号プロセスで例外が発生した場合のエラーです。
        |990004|電子署名の不一致|電子署名の検証において不正な署名と判定されました。||電子署名の検証に失敗した場合のエラーです。
        |990005|WebBureauTransfer送信時エラー|WebBureauTransferの送信処理に失敗しました。||WebBureauTransferを利用するAPIにてWebBureauTransferの送信処理に失敗したときのエラーです。
        |990011|WebBureauTransfer送信時エラー|WebBureauTransferの送信処理に失敗しました。||WebBureauTransferを利用するAPIにてWebBureauTransferの送信処理に失敗したときのエラーです。
        |990013|WebBureauTransferファイル登録時エラー|WebBureauTransferのファイル登録処理に失敗しました。||WebBureauTransferを利用するAPIにてWebBureauTransferのファイル登録処理に失敗したときのエラーです。
        |992001|MongoDBエラー|MongoDBの内部エラーが発生しました。(code {0} message{1})|{0}: コード<br>{1}: メッセージ|MongoDB登録処理に失敗したときのエラーです。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseBody'
    '500':
      $ref: '#/components/schemas/errorResponseBody500'


components:
  schemas:
    pdsUserId:
    accessToken:
      $ref: '../../components/header/accessToken.yaml'
    timeStamp:
      $ref: '../../components/header/timeStamp.yaml'

    # Request body
    TfUserRequest:
      description: リクエストボディ
      type: object
      properties:
        pdsUserId:
          $ref: '../../components/parameters/pdsUserId.yaml'
        searchCriteria:
          title: 検索条件
          type: object
          description: 検索条件をまとめたオブジェクト
          properties:
            userIdMatchMode:
              title: 検索用ユーザID検索モード
              type: string
              pattern: '[前方一致|後方一致|部分一致]'
              example: "前方一致"
              description: |
                前方一致、後方一致、部分一致を指定する
            userIdStr:
              title: 検索用ユーザID検索文字列
              type: string
              pattern: '禁則文字無し'
              maxLength: 36
              example: "C0123456"
            dataJsonKey:
              title: 保存データJsonキー情報
              type: string
              example: "data.name.firstName"
              pattern: '禁則文字無し'
              description: |
               JSON検索の場合はキーを指定する。<br>
               指定がなければ文字列として検索する。<br>
               ※指定例<br>
               ```
                {
                    "data": {
                        "name": {
                            "firstName": "XXX"
                        }
                    }
                }
               ```
               上記の場合：data.name.firstName
               ```
                {
                    "data": {
                        "names": [
                            { "firstName": "XXX" },
                            { "firstName": "YYY" }
                        ]
                    }
                }
                ```
               上記の場合：data.names.[0].firstName
            dataMatchMode:
              title: 保存データ検索モード
              type: string
              pattern: '[前方一致|後方一致|部分一致]'
              example: "前方一致"
              description: |
                前方一致、後方一致、部分一致を指定する
            dataStr:
              title: 保存データ検索文字列
              type: string
              pattern: '禁則文字無し'
              example: "taro"
            imageHash:
              title: 保存されたバイナリデータのハッシュ値
              type: string
              pattern: '[a-zA-Z0-9]'
              example: "glakjgirhul"
              description: |
                AWSに保存されたバイナリデータの情報をハッシュ化したもの<br>
                保存されたバイナリデータでの検索はハッシュ値完全一致のみ対応
            fromDate:
              title: 検索用日時From
              type: string
              example: "2023/01/01"
              maxLength: 10
              minLength: 10
              pattern: '[0-9/]'
              description: |
                形式は「yyyy/MM/dd」とする<br>
                入力規則：```\d{4}/\d{2}/\d{2}```
            toDate:
              title: 検索用日時To
              type: string
              example: "2023/12/31"
              maxLength: 10
              minLength: 10
              pattern: '[0-9/]'
              description: |
                形式は「yyyy/MM/dd」とする<br>
                入力規則：```\d{4}/\d{2}/\d{2}```
        tidList:
          title: tidリスト
          type: array
          maxLength: 36
          description: tidのみが列挙されたCSVファイルをブラウザで読み込み、配列にした値が連携される想定
          pattern: '[a-zA-Z0-9]'
          items:
            type: string
          example:
            - "transaction0101"
            - "transaction0102"
        approvalUserId:
          title: 承認TFオペレータID
          example: "taro.yamada"
          type: string
          minLength: 3
          maxLength: 16
          pattern: '[a-zA-Z0-9_.+-]'
        approvalUserPassword:
          title: 承認TFオペレータパスワード
          example: "password_0123"
          type: string
          maxLength: 617
          minLength: 8
          pattern: '[a-zA-Z0-9!@#$%^&*()_+-=[]{}|]'
        mailAddressTo:
          title: 宛先To
          type: string
          example: "XXX@XXX.co.jp"
          maxLength: 512
          pattern: '[a-zA-Z0-9_.-@;]'
          description: |
            個人情報一括DL送付先アドレスToの想定<br>
            セミコロン区切りで複数登録可能<br>
            入力規則：```^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)+(;[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)*$```
        mailAddressCc:
          title: 宛先Cc
          type: string
          example: "XXX@XXX.co.jp"
          maxLength: 512
          pattern: '[a-zA-Z0-9_.-@;]'
          description: |
            個人情報一括DL送付先アドレスCcの想定<br>
            セミコロン区切りで複数登録可能<br>
            入力規則：```^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)+(;[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)*$```
      required: 
        - pdsUserId
        - mailAddressTo
        - approvalUserId
        - approvalUserPassword

    # Responses
    TfUserResponse:
      description: レスポンス
      type: object
      properties:
        status:
          $ref: '../../components/parameters/status.yaml'
        accessToken:
          $ref: '../../components/parameters/AccessToken.yaml'
        inquiryId:
          title: 問い合わせID
          type: string
          example: "1111"
          pattern: '[a-zA-Z0-9]'
    errorResponseBody:
      description: ERRORレスポンス
      type: object
      properties:
        status:
          $ref: '../../components/parameters/statusError.yaml'
        errorInfo:
          $ref: '../../components/parameters/errorInfo.yaml'
    errorResponseBody500:
      $ref: '../../components/parameters/errorResponseBody500.yaml'